name: Juice Shop Fuzzing

on:
  workflow_dispatch:

jobs:
  fuzzing:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Python deps
      run: pip install requests
    
    - name: Create minimal Juice Shop mock
      run: |
        mkdir mock-server
        cd mock-server
        cat > server.py << 'EOF'
        from http.server import HTTPServer, BaseHTTPRequestHandler
        import json
        
        class Handler(BaseHTTPRequestHandler):
            def do_POST(self):
                if '/rest/user/login' in self.path:
                    content_length = int(self.headers['Content-Length'])
                    post_data = self.rfile.read(content_length)
                    data = json.loads(post_data.decode('utf-8'))
                    
                    email = data.get('email', '')
                    
                    # Simulate SQL injection vulnerability
                    if "' OR" in email or "' or" in email:
                        # Simulate successful auth bypass
                        response = {"authentication": {"token": "fake-jwt-token"}}
                        self.send_response(200)
                        self.send_header('Content-Type', 'application/json')
                        self.end_headers()
                        self.wfile.write(json.dumps(response).encode())
                    else:
                        # Normal failure
                        self.send_response(401)
                        self.end_headers()
                        self.wfile.write(b'Invalid credentials')
                        
        if __name__ == '__main__':
            server = HTTPServer(('localhost', 3000), Handler)
            server.serve_forever()
        EOF
        
        python server.py &
        sleep 5
    
    - name: Install ffuf
      run: |
        wget https://github.com/ffuf/ffuf/releases/download/v2.1.0/ffuf_2.1.0_linux_amd64.tar.gz
        tar -xzf ffuf_2.1.0_linux_amd64.tar.gz
        chmod +x ffuf
        sudo mv ffuf /usr/local/bin/
    
    - name: Run Python fuzzing
      run: python fuzz_script.py
      continue-on-error: true
    
    - name: Run ffuf fuzzing
      run: |
        ffuf -w sql_payloads.txt:FUZZ -u http://localhost:3000/rest/user/login -X POST -H "Content-Type: application/json" -d '{"email":"FUZZ","password":"test123"}' -o ffuf_results.json -of json -mc all -t 1
      continue-on-error: true
    
    - name: Create results bundle
      run: |
        mkdir security-reports
        cp *.json security-reports/ 2>/dev/null || true
        cp *.py security-reports/ 2>/dev/null || true
        cp *.txt security-reports/ 2>/dev/null || true
        echo "Fuzzing completed successfully" > security-reports/summary.txt
        tar -czf security-reports-bundle.tar.gz security-reports/
        ls -la security-reports/
    
    - name: Upload bundle
      uses: actions/upload-artifact@v4
      with:
        name: security-reports-bundle
        path: security-reports-bundle.tar.gz
      if: always()
